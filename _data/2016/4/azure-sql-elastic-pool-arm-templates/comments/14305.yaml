id: 14305
author:
  name: Ryan Berger
  url: http://thelendingside.com
date: 2019-02-14T13:13:35.0000000-08:00
content: >-
  Hi Vincent,


  I am trying to reverse engineer yours to make it fit for my scenario. I misspoke, yours does work properly and add the databases into the elastic pool - but even using your same logic, I am having trouble with mine. I even switched my template around to build the pools within the same resource as the database server, thinking it was something associated with that. Would you mind giving my template a quick glance and maybe provide any guidance? I've tried playing with the api versions, thinking that maybe the newer ones do not support the                 "requestedServiceObjectiveName": "ElasticPool", command the way the 2014-preview one does, but I am having no luck. Please note this is a nested template that is kicked off from a parent template. It does build out all of the resources, just is not automatically putting the database I am creating INTO the elastic pool I am creating. Thanks so much!


  {
      "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
      "contentVersion": "1.0.0.0",
      "parameters": {
          "administratorLogin": {
              "type": "string",
              "metadata": {
                  "description": "The SQL Server administrator login"
              }
          },
          "administratorLoginPassword": {
              "type": "securestring",
              "metadata": {
                  "description": "The SQL Server administrator login password."
              }
          },
          "collation": {
              "type": "string",
              "defaultValue": "SQL_Latin1_General_CP1_CI_AS"
          },
          "databaseName": {
              "type": "string",
              "defaultValue": "DBnameunique"
          },
          "elasticPool": {
              "type": "string",
              "defaultValue": "Yes",
              "allowedValues": [
                  "Yes",
                  "No"
              ]
          },
          "elasticPoolName": {
              "type": "string",
              "defaultValue": "elasticPoolName"
          },
          "elasticPoolEdition": {
              "type": "string",
              "defaultValue": "Standard"
          },
          "poolDtu": {
              "type": "int",
              "defaultValue": 100
          },
          "databaseDtuMin": {
              "type": "int",
              "defaultValue": 0
          },
          "databaseDtuMax": {
              "type": "int",
              "defaultValue": 100
          },
          "tier": {
              "type": "string",
              "defaultValue": "Standard"
          },
          "dbSkuName": {
              "type": "string",
              "defaultValue": "S1"
          },
          "maxSizeBytes": {
              "type": "int",
              "defaultValue": 268435456000
          },
          "serverName": {
              "type": "string",
              "defaultValue": "testsqltest"
          },
          "sampleName": {
              "type": "string",
              "defaultValue": ""
          },
          "zoneRedundant": {
              "type": "bool",
              "defaultValue": false
          },
          "dbLicenseType": {
              "type": "string",
              "defaultValue": ""
          },
          "readScaleOut": {
              "type": "string",
              "defaultValue": "Disabled"
          },
          "numberOfReplicas": {
              "type": "int",
              "defaultValue": 0
          },
          "enableATP": {
              "type": "bool",
              "defaultValue": false
          },
          "allowAzureIps": {
              "type": "bool",
              "defaultValue": true
          }
      },
      "variables": {
          "resourceGroupLocation": "[resourceGroup().location]"
      },
      "resources": [
          {
              "apiVersion": "2014-04-01-preview",
              "location": "[variables('resourceGroupLocation')]",
              "name": "[parameters('serverName')]",
              "properties": {
                  "administratorLogin": "[parameters('administratorLogin')]",
                  "administratorLoginPassword": "[parameters('administratorLoginPassword')]",
                  "version": "12.0"
              },
              "resources": [
                   {
              "condition": "[equals(parameters('elasticPool'), 'Yes')]",
              "apiVersion": "2014-04-01-preview",
              "dependsOn": [
                  "[concat('Microsoft.Sql/servers/', parameters('serverName'))]"
              ],
              "location": "[variables('resourceGroupLocation')]",
              "name": "[concat(parameters('serverName'), '/', parameters('elasticPoolName'))]",
              "properties": {
                  "edition": "[parameters('elasticPoolEdition')]",
                  "dtu": "[parameters('poolDtu')]",
                  "databaseDtuMin": "[parameters('databaseDtuMin')]",
                  "databaseDtuMax": "[parameters('databaseDtuMax')]"
              },
              "type": "Microsoft.Sql/servers/elasticPools"
          },
                  {
                      "condition": "[parameters('allowAzureIps')]",
                      "apiVersion": "2014-04-01-preview",
                      "dependsOn": [
                          "[concat('Microsoft.Sql/servers/', parameters('serverName'))]"
                      ],
                      "location": "[variables('resourceGroupLocation')]",
                      "name": "AllowAllWindowsAzureIps",
                      "properties": {
                          "endIpAddress": "0.0.0.0",
                          "startIpAddress": "0.0.0.0"
                      },
                      "type": "firewallrules"
                  },
                  {
                      "condition": "[parameters('enableATP')]",
                      "apiVersion": "2017-03-01-preview",
                      "type": "securityAlertPolicies",
                      "name": "Default",
                      "dependsOn": [
                          "[concat('Microsoft.Sql/servers/', parameters('serverName'))]",
                          "[concat('Microsoft.Sql/servers/', parameters('serverName'), '/databases/', parameters('databaseName'))]"
                      ],
                      "properties": {
                          "state": "Enabled",
                          "disabledAlerts": [],
                          "emailAddresses": [],
                          "emailAccountAdmins": true
                      }
                  }
              ],
              "type": "Microsoft.Sql/servers"
          },
          {
              "apiVersion": "2017-03-01-preview",
              "dependsOn": [
                  "[concat('Microsoft.Sql/servers/', parameters('serverName'))]",
                  "[resourceId('Microsoft.Sql/servers/elasticpools', parameters('serverName'), parameters('elasticPoolName'))]"
              ],
              "location": "[variables('resourceGroupLocation')]",
              "name": "[concat (parameters('serverName'), '/', parameters('databaseName'))]",
              "properties": {
                  "collation": "[parameters('collation')]",
                  "maxSizeBytes": "[parameters('maxSizeBytes')]",
                  "sampleName": "[parameters('sampleName')]",
                  "zoneRedundant": "[parameters('zoneRedundant')]",
                  "licenseType": "[parameters('DBlicenseType')]",
                  "readScale": "[parameters('readScaleOut')]",
                  "readReplicaCount": "[parameters('numberOfReplicas')]",
                  "requestedServiceObjectiveName": "ElasticPool",
                  "elasticPoolName": "[concat (parameters('serverName'), '/', parameters('elasticPoolName'))]"
              },
              "sku": {
                  "name": "[parameters('DBskuName')]",
                  "tier": "[parameters('tier')]"
              },
              "type": "Microsoft.Sql/servers/databases"
          }
      ],
      "outputs": {}
  }
